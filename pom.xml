<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.njkol</groupId>
  <artifactId>spark-jenkins-integration</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  
  <properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<cdh_version>cdh5.14.2</cdh_version>
		<spark.version>1.6.0</spark.version>
		<scala.version>2.11.11</scala.version>
		<scala.compat.version>2.11</scala.compat.version>
		<scoverage.plugin.version>1.3.0</scoverage.plugin.version>
		<scoverage.scalacPluginVersion>1.3.0</scoverage.scalacPluginVersion>
		<project-info-reports.plugin.version>2.9</project-info-reports.plugin.version>
		<site.plugin.version>3.5.1</site.plugin.version>
	</properties>

	<dependencies>

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-core_${scala.compat.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-sql_${scala.compat.version}</artifactId>
			<version>${spark.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-hive_${scala.compat.version}</artifactId>
			<version>${spark.version}</version>
		</dependency>

		<!-- LOGGING -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api-scala_${scala.compat.version}</artifactId>
			<version>2.8.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.8.2</version>
		</dependency>

		<!-- Unit Testing dependencies -->

		<!-- https://mvnrepository.com/artifact/org.scalatest/scalatest -->
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_${scala.compat.version}</artifactId>
			<version>3.0.1</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.databricks</groupId>
			<artifactId>spark-csv_${scala.compat.version}</artifactId>
			<version>1.5.0</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<sourceDirectory>src/main/scala</sourceDirectory>
		<testSourceDirectory>src/test/scala</testSourceDirectory>
		<plugins>
			<plugin>
				<!-- see http://davidb.github.com/scala-maven-plugin -->
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.2.0</version>
				<executions>
					<execution>
						<id>scala-compile-first</id>
						<phase>process-resources</phase>
						<goals>
							<goal>add-source</goal>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>scala-test-compile</id>
						<phase>process-test-resources</phase>
						<goals>
							<goal>testCompile</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.13</version>
				<configuration>
					<skipTests>true</skipTests>
					<useFile>false</useFile>
					<disableXmlReport>true</disableXmlReport>
					<!-- ScalaTest options -->
					<argLine>-Xmx2048m -XX:MaxPermSize=2048m</argLine>
					<!-- <forkCount>1</forkCount> <reuseForks>true</reuseForks> -->
					<!-- If you have classpath issue like NoDefClassError,... -->
					<useManifestOnlyJar>false</useManifestOnlyJar>
					<includes>
						<include>**/*Test.*</include>
						<include>**/*Suite.*</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.scalatest</groupId>
				<artifactId>scalatest-maven-plugin</artifactId>
				<version>1.0</version>
				<configuration>
					<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>
					<junitxml>.</junitxml>
					<filereports>WDF TestSuite.txt</filereports>
				</configuration>
				<executions>
					<execution>
						<id>test</id>
						<goals>
							<goal>test</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Static code analysis -->
			<plugin>
				<groupId>org.scalastyle</groupId>
				<artifactId>scalastyle-maven-plugin</artifactId>
				<version>1.0.0</version>
				<configuration>
					<verbose>false</verbose>
					<failOnViolation>false</failOnViolation>
					<includeTestSourceDirectory>true</includeTestSourceDirectory>
					<failOnWarning>false</failOnWarning>
					<sourceDirectory>${project.basedir}/src/main/scala</sourceDirectory>
					<testSourceDirectory>${project.basedir}/src/test/scala</testSourceDirectory>
					<configLocation>${project.basedir}/src/main/resources/scalastyle_config.xml</configLocation>
					<outputFile>${project.basedir}/scalastyle-output.xml</outputFile>
					<outputEncoding>UTF-8</outputEncoding>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- Test coverage -->

			<plugin>
				<groupId>org.scoverage</groupId>
				<artifactId>scoverage-maven-plugin</artifactId>
				<version>${scoverage.plugin.version}</version>
				<configuration>
					<aggregate>true</aggregate> <!-- for aggregated report -->
					<highlighting>true</highlighting>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<outputDirectory>${project.basedir}/deployment</outputDirectory>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${site.plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

	</build>

	<!-- In scoverage:report life cycle project is compiled with SCoverage instrumentation 
		and tests are executed before report generation. -->
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>${project-info-reports.plugin.version}</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
			<plugin>
				<groupId>org.scoverage</groupId>
				<artifactId>scoverage-maven-plugin</artifactId>
				<version>${scoverage.plugin.version}</version>
				<configuration>
					<aggregate>true</aggregate> <!-- for aggregated report -->
					<highlighting>true</highlighting>
				</configuration>
				<reportSets>
					<reportSet>
						<reports>
							<report>report</report> <!-- select only one report from: report, integration-report and report-only 
								reporters -->
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
	
</project>